{"version":3,"names":["BasePlugin","Dropbox","GoogleDrive","Instagram","Facebook","OneDrive","Box","Unsplash","Url","Zoom","packageJson","availablePlugins","__proto__","defaultOptions","sources","Object","keys","_installedPlugins","_classPrivateFieldLooseKey","RemoteSources","constructor","uppy","opts","defineProperty","writable","value","Set","id","type","companionUrl","Error","setOptions","newOpts","uninstall","install","forEach","pluginId","optsForRemoteSourcePlugin","undefined","plugin","pluginNames","formatter","Intl","ListFormat","style","format","use","_classPrivateFieldLooseBase","add","getPlugin","removePlugin","clear","VERSION","version"],"sources":["index.ts"],"sourcesContent":["import {\n  BasePlugin,\n  Uppy,\n  type UIPluginOptions,\n  type UnknownProviderPlugin,\n} from '@uppy/core'\nimport Dropbox from '@uppy/dropbox'\nimport GoogleDrive from '@uppy/google-drive'\nimport Instagram from '@uppy/instagram'\nimport Facebook from '@uppy/facebook'\nimport OneDrive from '@uppy/onedrive'\nimport Box from '@uppy/box'\nimport Unsplash from '@uppy/unsplash'\nimport Url from '@uppy/url'\nimport Zoom from '@uppy/zoom'\n\nimport type { DefinePluginOpts } from '@uppy/core/lib/BasePlugin'\nimport type { Body, Meta } from '@uppy/utils/lib/UppyFile'\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore We don't want TS to generate types for the package.json\nimport packageJson from '../package.json'\n\nconst availablePlugins = {\n  // Using a null-prototype object to avoid prototype pollution.\n  __proto__: null,\n  Box,\n  Dropbox,\n  Facebook,\n  GoogleDrive,\n  Instagram,\n  OneDrive,\n  Unsplash,\n  Url,\n  Zoom,\n}\n\nexport interface RemoteSourcesOptions extends UIPluginOptions {\n  sources?: Array<keyof Omit<typeof availablePlugins, '__proto__'>>\n  companionUrl: string\n}\n\nconst defaultOptions = {\n  sources: Object.keys(availablePlugins) as Array<\n    keyof Omit<typeof availablePlugins, '__proto__'>\n  >,\n} satisfies Partial<RemoteSourcesOptions>\n\ntype Opts = DefinePluginOpts<RemoteSourcesOptions, keyof typeof defaultOptions>\n\nexport default class RemoteSources<\n  M extends Meta,\n  B extends Body,\n> extends BasePlugin<Opts, M, B> {\n  static VERSION = packageJson.version\n\n  #installedPlugins: Set<UnknownProviderPlugin<M, B>> = new Set()\n\n  constructor(uppy: Uppy<M, B>, opts: RemoteSourcesOptions) {\n    super(uppy, { ...defaultOptions, ...opts })\n    this.id = this.opts.id || 'RemoteSources'\n    this.type = 'preset'\n\n    if (this.opts.companionUrl == null) {\n      throw new Error(\n        'Please specify companionUrl for RemoteSources to work, see https://uppy.io/docs/remote-sources#companionUrl',\n      )\n    }\n  }\n\n  setOptions(newOpts: Partial<Opts>): void {\n    this.uninstall()\n    super.setOptions(newOpts)\n    this.install()\n  }\n\n  install(): void {\n    this.opts.sources.forEach((pluginId) => {\n      const optsForRemoteSourcePlugin = { ...this.opts, sources: undefined }\n      const plugin = availablePlugins[pluginId]\n      if (plugin == null) {\n        const pluginNames = Object.keys(availablePlugins)\n        const formatter = new Intl.ListFormat('en', {\n          style: 'long',\n          type: 'disjunction',\n        })\n        throw new Error(\n          `Invalid plugin: \"${pluginId}\" is not one of: ${formatter.format(pluginNames)}.`,\n        )\n      }\n      this.uppy.use(plugin, optsForRemoteSourcePlugin)\n      // `plugin` is a class, but we want to track the instance object\n      // so we have to do `getPlugin` here.\n      this.#installedPlugins.add(\n        this.uppy.getPlugin(pluginId) as UnknownProviderPlugin<M, B>,\n      )\n    })\n  }\n\n  uninstall(): void {\n    for (const plugin of this.#installedPlugins) {\n      this.uppy.removePlugin(plugin)\n    }\n    this.#installedPlugins.clear()\n  }\n}\n"],"mappings":"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"}