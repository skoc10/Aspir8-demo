{"version":3,"names":["h","UIPlugin","packageJson","defaultOptions","target","fixed","hideAfterFinish","ProgressBar","constructor","uppy","opts","id","title","type","render","bind","state","progress","totalProgress","isHidden","className","style","position","width","install","mount","uninstall","unmount","VERSION","version"],"sources":["ProgressBar.tsx"],"sourcesContent":["import { h, type ComponentChild } from 'preact'\nimport { UIPlugin, type UIPluginOptions } from '@uppy/core'\nimport type { Uppy, State } from '@uppy/core/lib/Uppy'\nimport type { Body, Meta } from '@uppy/utils/lib/UppyFile'\nimport type { DefinePluginOpts } from '@uppy/core/lib/BasePlugin.js'\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore We don't want TS to generate types for the package.json\nimport packageJson from '../package.json'\n\nexport interface ProgressBarOptions extends UIPluginOptions {\n  hideAfterFinish?: boolean\n  fixed?: boolean\n}\n// set default options, must kept in sync with @uppy/react/src/ProgressBar.js\nconst defaultOptions = {\n  target: 'body',\n  fixed: false,\n  hideAfterFinish: true,\n}\n\ntype Opts = DefinePluginOpts<ProgressBarOptions, keyof typeof defaultOptions>\n\n/**\n * Progress bar\n *\n */\nexport default class ProgressBar<\n  M extends Meta,\n  B extends Body,\n> extends UIPlugin<Opts, M, B> {\n  static VERSION = packageJson.version\n\n  constructor(uppy: Uppy<M, B>, opts?: ProgressBarOptions) {\n    super(uppy, { ...defaultOptions, ...opts })\n    this.id = this.opts.id || 'ProgressBar'\n    this.title = 'Progress Bar'\n    this.type = 'progressindicator'\n\n    this.render = this.render.bind(this)\n  }\n\n  render(state: State<M, B>): ComponentChild {\n    const progress = state.totalProgress || 0\n    // before starting and after finish should be hidden if specified in the options\n    const isHidden =\n      (progress === 0 || progress === 100) && this.opts.hideAfterFinish\n    return (\n      <div\n        className=\"uppy uppy-ProgressBar\"\n        style={{ position: this.opts.fixed ? 'fixed' : 'initial' }}\n        aria-hidden={isHidden}\n      >\n        <div\n          className=\"uppy-ProgressBar-inner\"\n          style={{ width: `${progress}%` }}\n        />\n        <div className=\"uppy-ProgressBar-percentage\">{progress}</div>\n      </div>\n    )\n  }\n\n  install(): void {\n    const { target } = this.opts\n    if (target) {\n      this.mount(target, this)\n    }\n  }\n\n  uninstall(): void {\n    this.unmount()\n  }\n}\n"],"mappings":"AAAA,SAASA,CAAC,QAA6B,QAAQ;AAC/C,SAASC,QAAQ,QAA8B,YAAY;AAK3D;AACA;AAAA,MACOC,WAAW;EAAA;AAAA;AAMlB;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE,KAAK;EACZC,eAAe,EAAE;AACnB,CAAC;AAID;AACA;AACA;AACA;AACA,eAAe,MAAMC,WAAW,SAGtBN,QAAQ,CAAa;EAG7BO,WAAWA,CAACC,IAAgB,EAAEC,IAAyB,EAAE;IACvD,KAAK,CAACD,IAAI,EAAE;MAAE,GAAGN,cAAc;MAAE,GAAGO;IAAK,CAAC,CAAC;IAC3C,IAAI,CAACC,EAAE,GAAG,IAAI,CAACD,IAAI,CAACC,EAAE,IAAI,aAAa;IACvC,IAAI,CAACC,KAAK,GAAG,cAAc;IAC3B,IAAI,CAACC,IAAI,GAAG,mBAAmB;IAE/B,IAAI,CAACC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC;EACtC;EAEAD,MAAMA,CAACE,KAAkB,EAAkB;IACzC,MAAMC,QAAQ,GAAGD,KAAK,CAACE,aAAa,IAAI,CAAC;IACzC;IACA,MAAMC,QAAQ,GACZ,CAACF,QAAQ,KAAK,CAAC,IAAIA,QAAQ,KAAK,GAAG,KAAK,IAAI,CAACP,IAAI,CAACJ,eAAe;IACnE,OACEN,CAAA;MACEoB,SAAS,EAAC,uBAAuB;MACjCC,KAAK,EAAE;QAAEC,QAAQ,EAAE,IAAI,CAACZ,IAAI,CAACL,KAAK,GAAG,OAAO,GAAG;MAAU,CAAE;MAC3D,eAAac;IAAS,GAEtBnB,CAAA;MACEoB,SAAS,EAAC,wBAAwB;MAClCC,KAAK,EAAE;QAAEE,KAAK,EAAG,GAAEN,QAAS;MAAG;IAAE,CAClC,CAAC,EACFjB,CAAA;MAAKoB,SAAS,EAAC;IAA6B,GAAEH,QAAc,CACzD,CAAC;EAEV;EAEAO,OAAOA,CAAA,EAAS;IACd,MAAM;MAAEpB;IAAO,CAAC,GAAG,IAAI,CAACM,IAAI;IAC5B,IAAIN,MAAM,EAAE;MACV,IAAI,CAACqB,KAAK,CAACrB,MAAM,EAAE,IAAI,CAAC;IAC1B;EACF;EAEAsB,SAASA,CAAA,EAAS;IAChB,IAAI,CAACC,OAAO,CAAC,CAAC;EAChB;AACF;AA7CqBpB,WAAW,CAIvBqB,OAAO,GAAG1B,WAAW,CAAC2B,OAAO"}